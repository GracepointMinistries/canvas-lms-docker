name: 'Publish'
on:
  - pull_request
jobs:
  publish:
    name: 'publish'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        canvas_lms_release: ["2020-04-25.05"]

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Checkout canvas-ltm from release'
        uses: actions/checkout@v2
        with:
          repository: instructure/canvas-lms
          ref: release/${{ matrix.canvas_lms_release }}
          path: canvas-lms
          fetch-depth: 1

      - name: 'Build canvas-ltm from release'
        run: |
          # Overwrite configuration with container-friendly configuration
          rm -rf canvas-lms/config
          cp -r config canvas-lms/config/

          # Enable docker experimental features (so that we can use --squash)
          echo '{ "experiemental" : true }' > daemon.json
          sudo mv daemon.json /etc/docker/
          sudo systemctl restart docker

          # Build image
          docker build --squash -f canvas-lms/Dockerfile -t gracepoint/canvas-lms:production canvas-lms

      - name: 'Verify Image'
        run: |
          docker-compose build

          # Setup datastores
          docker-compose up -d postgres
          docker-compose up -d redis
          scripts/tcp_ready_check.sh localhost 5432 # Waiting for Postgres to be ready

          # Seed data
          docker-compose up db_setup

          # Startup canvas-lms
          docker-compose up -d web

          # Verify canvas-lms can start up correctly
          wget --retry-connrefused --waitretry=5 --timeout=5 --tries 20 --quiet --output-document=- localhost:80/health_check

      - name: 'Tag and Publish'
        # if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Replaces dashes with periods in Docker tag name
          IMAGE_VERSION=$(sed 's/-/./g' <<< ${{ matrix.canvas_lms_release }})

          IMAGE="docker.pkg.github.com/GracepointMinistries/canvas-lms-docker/production:$IMAGE_VERSION"

          # Docker login to Github Packages
          echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com

          # Tag and Publish
          docker tag gracepoint/canvas-lms:production $IMAGE
          docker push $IMAGE
